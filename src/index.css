@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark theme base colors */
    --background: 0 0% 3%;
    --foreground: 0 0% 95%;

    /* Card colors - dark with subtle elevation */
    --card: 0 0% 8%;
    --card-foreground: 0 0% 95%;

    /* Popover colors */
    --popover: 0 0% 8%;
    --popover-foreground: 0 0% 95%;

    /* Primary colors - electric blue/purple gradient */
    --primary: 260 100% 60%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 280 100% 70%;

    /* Secondary colors - subtle dark */
    --secondary: 0 0% 12%;
    --secondary-foreground: 0 0% 85%;

    /* Muted colors */
    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 60%;

    /* Accent colors - electric cyan */
    --accent: 190 100% 60%;
    --accent-foreground: 0 0% 10%;

    /* Destructive colors */
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    /* Border and input colors */
    --border: 0 0% 15%;
    --input: 0 0% 12%;
    --ring: 260 100% 60%;

    /* Border radius */
    --radius: 0.75rem;

    /* Custom marketplace colors */
    --surface: 0 0% 6%;
    --surface-elevated: 0 0% 10%;
    --glow: 260 100% 60%;
    --text-muted: 0 0% 65%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(260 100% 60%), hsl(280 100% 70%));
    --gradient-accent: linear-gradient(135deg, hsl(190 100% 60%), hsl(260 100% 60%));
    --gradient-surface: linear-gradient(145deg, hsl(0 0% 6%), hsl(0 0% 10%));
    --gradient-glow: radial-gradient(circle at 50% 50%, hsl(260 100% 60% / 0.3), transparent 70%);
    
    /* Shadows and glows */
    --shadow-glow: 0 0 40px hsl(var(--glow) / 0.3);
    --shadow-card: 0 4px 20px hsl(0 0% 0% / 0.5);
    --shadow-elevated: 0 8px 40px hsl(0 0% 0% / 0.7);
  }

  /* Remove dark class since we're dark by default */
  .light {
    --background: 0 0% 98%;
    --foreground: 0 0% 10%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 10%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 10%;
    --primary: 260 100% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 20%;
    --muted: 0 0% 94%;
    --muted-foreground: 0 0% 40%;
    --accent: 190 100% 50%;
    --accent-foreground: 0 0% 100%;
    --border: 0 0% 88%;
    --input: 0 0% 94%;
    --ring: 260 100% 50%;
    --surface: 0 0% 98%;
    --surface-elevated: 0 0% 100%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary));
  }
}

@layer components {
  /* Animations */
  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-fade-in {
    animation: fadeIn 0.6s ease-out;
  }

  .animate-slide-up {
    animation: slideUp 0.6s ease-out;
  }

  .hover-glow {
    transition: all 0.3s ease;
  }

  .hover-glow:hover {
    box-shadow: var(--shadow-glow);
    transform: translateY(-2px);
  }

  /* Gradient text */
  .gradient-text {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Card hover effects */
  .card-hover {
    transition: all 0.3s ease;
    transform-style: preserve-3d;
  }

  .card-hover:hover {
    transform: translateY(-8px) rotateX(5deg) rotateY(5deg);
    box-shadow: var(--shadow-elevated);
  }

  /* Particle background */
  .particle-bg {
    background: var(--gradient-surface);
    position: relative;
    overflow: hidden;
  }

  .particle-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--gradient-glow);
    opacity: 0.1;
    animation: float 8s ease-in-out infinite;
  }

  /* Button variants */
  .btn-primary {
    background: var(--gradient-primary);
    color: hsl(var(--primary-foreground));
    border: none;
    box-shadow: var(--shadow-glow);
    transition: all 0.3s ease;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 60px hsl(var(--glow) / 0.5);
  }

  .btn-ghost {
    background: transparent;
    border: 1px solid hsl(var(--border));
    color: hsl(var(--foreground));
    transition: all 0.3s ease;
  }

  .btn-ghost:hover {
    background: hsl(var(--surface-elevated));
    border-color: hsl(var(--primary));
    box-shadow: 0 0 20px hsl(var(--primary) / 0.2);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 20px hsl(var(--glow) / 0.3);
  }
  to {
    box-shadow: 0 0 40px hsl(var(--glow) / 0.6);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}